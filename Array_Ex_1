"""
Two Number Sum								
â€¢ {;:]								
Write a function that takes in a non-empty array of distinct integers and an integer representing								
"a target sum. If any two numbers in the input array sum up to the target sum,the function"								
"should return them in an array, in any order. If no two numbers sum up to the target sum, the"								
function should return an empty array.								
Note that the target sum has to be obtained by summing two different integers in the array; you								
can't add a single integer to itself in order to obtain the target sum.								
You can assume that there will be at most one pair of numbers summing up to the target sum.								
Sample Input								
=								
"-1, 6]"								
array								
"[3, s, -4, 8, 11, 1,"								
targetSum								
= 10								

"""
#Solution with O(N ^ 2) complexity
def twoNumberSum(array, targetSum):
    # Write your code here.
    sum=0
    if len(array) > 1:
        print(len(array))
        for x in array:
            for y in array:
                if x!=y:
                    sum = x+y
                    if sum == targetSum:
                        return(x,y)
        #here where all pair added and still not find the match for targetsum
        return([])        
    elif len(array)==1:
        #here array has only one element
        if(array[0] == targetSum):
            return[]
        else:
            return[]
    else:
        #here array i empty

####Solution with O(N ^ 2 ) Complexity but less complex, here y is being looked agaist in array across N element,  if N elements are there so it is O(N) and we are doing this N times hence another O(N)
def twoNumberSum(array, targetSum):
    # Write your code here.
   #create list by converting array into list
    for x in array:
        y= targetSum-x
        if y in array and x != y:
            return [y,x]
    return[]
            
